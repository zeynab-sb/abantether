openapi: 3.0.0
info:
  title: AbanTether API
  version: 1.0.0
tags:
  - name: User
    description: User registration and authentication
  - name: Wallet
    description: Wallet management (get, deposit, withdraw)
  - name: Order
    description: Order management (list, retrieve, create)

paths:
  /api/users/register/:
    post:
      tags:
        - User
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '201':
          description: User created
        '400':
          description: Bad request

  /api/users/login/:
    post:
      tags:
        - User
      summary: Login and get token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Token returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid credentials

  /api/wallet/:
    get:
      tags:
        - Wallet
      summary: Get wallet details
      security:
        - TokenAuth: []
      responses:
        '200':
          description: Wallet details
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: integer
                  balance:
                    type: number
                    format: float
        '401':
          description: Authentication credentials were not provided

  /api/wallet/deposit/:
    post:
      tags:
        - Wallet
      summary: Deposit funds into wallet
      security:
        - TokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
              required:
                - amount
      responses:
        '200':
          description: Deposit successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    format: float
        '400':
          description: Bad request or insufficient balance
        '401':
          description: Authentication credentials were not provided

  /api/wallet/withdraw/:
    post:
      tags:
        - Wallet
      summary: Withdraw funds from wallet
      security:
        - TokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: float
              required:
                - amount
      responses:
        '200':
          description: Withdraw successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  balance:
                    type: number
                    format: float
        '400':
          description: Bad request or insufficient balance
        '401':
          description: Authentication credentials were not provided

  /api/orders/:
    get:
      tags:
        - Order
      summary: List all orders for the authenticated user
      security:
        - TokenAuth: []
      responses:
        '200':
          description: List of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Authentication credentials were not provided

    post:
      tags:
        - Order
      summary: Create a new order
      security:
        - TokenAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currency:
                  type: string
                amount:
                  type: number
                  format: float
              required:
                - currency
                - amount
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Bad request or insufficient balance
        '401':
          description: Authentication credentials were not provided

  /api/orders/{id}/:
    get:
      tags:
        - Order
      summary: Get order by ID (only if it belongs to the user)
      security:
        - TokenAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Not found or does not belong to user
        '401':
          description: Authentication credentials were not provided

components:
  securitySchemes:
    TokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: 'Token-based authentication. Example: "Authorization: Token {token}"'
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
        user:
          type: integer
        coin:
          type: integer
        amount:
          type: number
          format: float
        status:
          type: string
        created_at:
          type: string
          format: date-time
        price_at_purchase:
          type: number
          format: float